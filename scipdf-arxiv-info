#!/usr/bin/env python3

import argparse
import os
import re
import subprocess
import urllib.request
import xml.etree.ElementTree as ET


def merge_string(s):
    return re.sub(r'[ \t\n]+', ' ', s)


def extract_arxiv_id(filename):
    result = subprocess.run(['pdfgrep', 'arXiv:', filename],
                            stdout=subprocess.PIPE,
                            check=True,
                            text=True)
    first_result = result.stdout.split('\n')[0]
    m = re.search(r'^arXiv:([^ ]+)', first_result)
    if not m:
        raise RuntimeError('Unable to find arXiv document ID.')
    return m.group(1)


def fetch_arxiv_info(arxiv_id):
    info = {}
    url = f'https://export.arxiv.org/api/query?id_list={arxiv_id}'
    with urllib.request.urlopen(url) as content:
        root = ET.fromstring(content.read())
        ns = {'atom': 'http://www.w3.org/2005/Atom'}
        info['title'] = merge_string(root.find('atom:entry/atom:title', ns).text)
        info['author'] = ', '.join([merge_string(e.text) for e in root.findall('atom:entry/atom:author/atom:name', ns)])
        info['date'] = merge_string(root.find('atom:entry/atom:published', ns).text)
    return info


def embed_pdfinfo(filename, info):
    text = []

    def add_info(key, value):
        text.append(f'InfoBegin')
        text.append(f'InfoKey: {key}')
        text.append(f'InfoValue: {value}')

    add_info('Title', info['title'])
    add_info('Author', info['author'])
    add_info('CreationDate', info['date'])

    subprocess.run(['pdftk', filename, 'update_info_utf8', '-', 'output', filename + '.new'],
                   input='\n'.join(text),
                   text=True,
                   check=True)

    os.rename(filename + '.new', filename)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Embed arXiv info into /pdfinfo object')
    parser.add_argument('--id', '-i', metavar='ID', default=None)
    parser.add_argument('pdf_file')
    args = parser.parse_args()

    if args.id is not None:
        arxiv_id = args.id
    else:
        arxiv_id = extract_arxiv_id(args.pdf_file)

    info = fetch_arxiv_info(arxiv_id)
    print(info)
    embed_pdfinfo(args.pdf_file, info)
